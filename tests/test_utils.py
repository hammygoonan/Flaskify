"""Test Falsify utilities."""

from flaskify.utils.scanner import ignore_directory
from flaskify.utils.scanner import get_track_details
from flaskify.utils.scanner import process_track_data
from flaskify.utils.scanner import create_artist
from flaskify.utils.scanner import create_album
from flaskify.utils.scanner import create_song
from flaskify.data.mp4 import Mp4
from flaskify.data.mp3 import Mp3
from flaskify.models.artists import Artist
from flaskify.models.albums import Album
from flaskify.models.songs import Song


def test_ignore_dir_if_contains_directories():
    """`ignore_directory` should return `False` if there are directories in the folder."""
    result = ignore_directory('/', ['dir1', 'dir2'], ['file1', 'file2'])
    assert result is False

    result = ignore_directory('/', ['dir1', 'dir2'], [])
    assert result is False


def test_ignore_dir_if_itunes_directories():
    """`ignore_directory` should return `False` it's the iTunes directory."""
    result = ignore_directory('/Music/iTunes/abolute bangers', [], ['file1.flac', 'file2.mp3'])
    assert result is False


def test_ignore_dir_if_no_music_files():
    """`ignore_directory` should return `False` if there are no music files in the dir."""
    result = ignore_directory('/Music/', [], ['file1', 'file2'])
    assert result is False


def test_ignore_dir_true():
    """`ignore_directory` should return `True`."""
    result = ignore_directory('/Music/', [], ['file1.mp3', 'file2'])
    assert result is True


def test_get_songs_returns_nothing_if_non_song(app):
    """Test nothing returned if non-song."""
    result = get_track_details('non-song')
    assert result is None


def test_get_songs_returns_songs(app):
    """Test songs are returned."""
    result = get_track_details('Amon Tobin/Dark Jovian/01 Dark Jovian.m4a')
    assert isinstance(result, Mp4)

    result = get_track_details('DJ Mustard/Ketchup - HotNewHipHop/08. DJ Mustard - LadyKilla Feat.'
                               ' Cocc Pistol Cree.mp3')
    assert isinstance(result, Mp3)


def test_create_artist_returns_new_artist(db):
    artist = create_artist('DJ Mustard')
    assert artist.name == 'DJ Mustard'


def test_create_artist_returns_existing_artist(db):
    create_artist('DJ Mustard')
    create_artist('DJ Mustard')
    artists = Artist.query.all()
    assert len(artists) == 1


def test_create_album_creates_new(db):
    album = create_album('Dancing on the Celling')
    assert album.title == 'Dancing on the Celling'


def test_create_album_returns_old(db):
    create_album('Dancing on the Celling')
    create_album('Dancing on the Celling')
    albums = Album.query.filter_by(title='Dancing on the Celling').all()
    assert len(albums) == 1


def test_create_song_creates_new(db):
    song = create_song('Back in Black', '/path/back_in_black.mp3')
    assert song.title == 'Back in Black'
    assert isinstance(song, Song)


def test_create_song_returns_existing_song(db):
    create_song('Back in Black', '/path/back_in_black.mp3')
    create_song('Back in Black', '/path/back_in_black.mp3')
    song = Song.query.filter_by(path='/path/back_in_black.mp3').all()
    assert len(song) == 1


def test_process_track_creates_song(db):
    """Test process track creates a new song."""
    track = get_track_details('DJ Mustard/Ketchup - HotNewHipHop/08. DJ Mustard - LadyKilla Feat.'
                              ' Cocc Pistol Cree.mp3')
    process_track_data(track)
    song = Song.query.filter_by(title='LadyKilla Feat. Cocc Pistol Cree').first()
    assert song.title == 'LadyKilla Feat. Cocc Pistol Cree'


def test_process_track_data_creates_artist(db):
    """Test Artist is generated by `create_artist`."""
    track = get_track_details('DJ Mustard/Ketchup - HotNewHipHop/08. DJ Mustard - LadyKilla Feat.'
                              ' Cocc Pistol Cree.mp3')
    process_track_data(track)
    artist = Artist.query.filter_by(name='DJ Mustard').first()
    assert artist.name == 'DJ Mustard'


def test_process_track_data_creates_album_artist(db):
    """Test album artist is added to album."""
    track = get_track_details('DJ Mustard/Ketchup - HotNewHipHop/08. DJ Mustard - LadyKilla Feat.'
                              ' Cocc Pistol Cree.mp3')
    process_track_data(track)
    album = Album.query.filter_by(title='Ketchup').first()
    assert album.artists[0].name == 'DJ Mustard'
